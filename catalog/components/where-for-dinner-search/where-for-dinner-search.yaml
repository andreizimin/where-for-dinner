apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: where-for-dinner-search
  annotations:
    "backstage.io/kubernetes-label-selector": "app.kubernetes.io/part-of=where-for-dinner-search"
spec:
  type: service
  lifecycle: experimental
  owner: where-for-dinner-team
  system: where-for-dinner
  links:
    - url: https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/
      icon: docs
      title: Customer-facing Docs
    - url: https://github.com/pivotal/docs-tap
      icon: github
      title: Docs Source Code
    - url: https://network.tanzu.vmware.com/products/tanzu-application-platform/
      icon: catalog
      title: Tanzu Network Product Page
  providesApis:
    - where-for-dinner-search
  dependsOn: 
    - resource:where-for-dinner-db
    - resource:where-for-dinner-messaging
    - component:where-for-dinner-search-proc
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: where-for-dinner-search
  description: The Search API
  tags:
    - api
    - tanzu
spec:
  type: openapi
  lifecycle: experimental
  owner: where-for-dinner-team
  component: where-for-dinner-search  
  definition: |
    openapi: "3.0.0"
    info:
      version: 1.0.0
      title: Swagger Petstore
      license:
        name: MIT
    servers:
      - url: http://petstore.swagger.io/v1
    paths:
      /pets:
        get:
          summary: List all pets
          operationId: listPets
          tags:
            - pets
          parameters:
            - name: limit
              in: query
              description: How many items to return at one time (max 100)
              required: false
              schema:
                type: integer
                format: int32
          responses:
            '200':
              description: A paged array of pets
              headers:
                x-next:
                  description: A link to the next page of responses
                  schema:
                    type: string
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Pets"
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
        post:
          summary: Create a pet
          operationId: createPets
          tags:
            - pets
          responses:
            '201':
              description: Null response
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
      /pets/{petId}:
        get:
          summary: Info for a specific pet
          operationId: showPetById
          tags:
            - pets
          parameters:
            - name: petId
              in: path
              required: true
              description: The id of the pet to retrieve
              schema:
                type: string
          responses:
            '200':
              description: Expected response to a valid request
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Pet"
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
    components:
      schemas:
        Pet:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            tag:
              type: string
        Pets:
          type: array
          items:
            $ref: "#/components/schemas/Pet"
        Pet-AZ:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
            tag:
              type: string
        Error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: integer
              format: int32
            message:
              type: string
